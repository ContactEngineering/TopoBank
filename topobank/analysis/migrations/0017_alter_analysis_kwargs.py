# Generated by Django 3.2.18 on 2023-04-08 19:30
# and edited manually by Lars Pastewka to convert pickled dictionaries
# to JSON

import pickle

from django.db import migrations, models


def forward_func(apps, schema_editor):
    Analysis = apps.get_model('analysis', 'analysis')
    for analysis in Analysis.objects.all():
        analysis.kwargs = pickle.loads(analysis.kwargs_pickle)
        # Remove superfluous information that cannot be JSON serialized
        if 'progress_recorder' in analysis.kwargs:
            del analysis.kwargs['progress_recorder']
        if 'storage_prefix' in analysis.kwargs:
            del analysis.kwargs['storage_prefix']
        if 'dois' in analysis.kwargs:
            del analysis.kwargs['dois']
        analysis.save()

def reverse_func(apps, schema_editor):
    Analysis = apps.get_model('analysis', 'analysis')
    for analysis in Analysis.objects.all():
        analysis.kwargs_pickle = pickle.dumps(analysis.kwargs)
        analysis.save()

class Migration(migrations.Migration):

    dependencies = [
        ('analysis', '0016_alter_version_unique_together'),
    ]

    operations = [
        migrations.RenameField(
            model_name='analysis',
            old_name='kwargs',
            new_name='kwargs_pickle',
        ),
        migrations.AddField(
            model_name='analysis',
            name='kwargs',
            field=models.JSONField(),
        ),
        migrations.RunPython(
            forward_func,
            reverse_func
        ),
        migrations.RemoveField(
            model_name='analysis',
            name='kwargs_pickle'
        )
    ]
