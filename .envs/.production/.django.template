#
# COPY THIS FILE TO .envs/.production/.django AND REPLACE MISSING INFORMATION BELOW!
#

# General
# ------------------------------------------------------------------------------
# DJANGO_READ_DOT_ENV_FILE=True
DJANGO_SETTINGS_MODULE=config.settings.production
DJANGO_SECRET_KEY=<replace with your own secret key, a very long random string>
DJANGO_ADMIN_URL=<replace with a long random url>
DJANGO_ALLOWED_HOSTS=contact.engineering

# Django's cache backend
# ------------------------------------------------------------------------------
DJANGO_DEFAULT_CACHE_BACKEND=django_redis.cache.RedisCache
DJANGO_DEFAULT_CACHE_LOCATION=redis://redis:6379/0

# Generating topography thumbnails with Firefox
# ------------------------------------------------------------------------------
# firefox binary, not the script!
FIREFOX_BINARY_PATH=/opt/conda/bin/FirefoxApp/firefox
GECKODRIVER_PATH=/opt/conda/bin/geckodriver

# Security
# ------------------------------------------------------------------------------
# TIP: better off using DNS, however, redirect is OK too
DJANGO_SECURE_SSL_REDIRECT=False

# Email
# ------------------------------------------------------------------------------
# a valid mail address to send from
DJANGO_DEFAULT_FROM_EMAIL=topobank@imtek.uni-freiburg.de
DJANGO_EMAIL_URL=smtp+ssl://topobank@imtek.uni-freiburg.de:<REPLACE WITH PASSWORD>@mail.uni-freiburg.de:465

# django-allauth
# ------------------------------------------------------------------------------
DJANGO_ACCOUNT_ALLOW_REGISTRATION=False

# Gunicorn
# ------------------------------------------------------------------------------
WEB_CONCURRENCY=4
# This is the numer of workers, see also: https://gunicorn-docs.readthedocs.io/en/latest/settings.html

# Celery
# ------------------------------------------------------------------------------
CELERY_BROKER_URL=redis://redis:6379/0
CELERY_RESULT_BACKEND=redis://redis:6379/1

# CELERY_BROKER_URL=amqp://guest:guest@rabbitmq:5672//
# without quotes!
# CELERY_RESULT_BACKEND=cache+memcached://memcached:11211/

# Flower
CELERY_FLOWER_USER=<a long random string>
CELERY_FLOWER_PASSWORD=<a very long random string>

# ORCID authentication
# ------------------------------------------------------------------------------
ORCID_CLIENT_ID=<replace with your client ID from ORCID>
ORCID_SECRET=<replace with your secret from ORCID>

# DataCite settings (DOI creation)
# ------------------------------------------------------------------------------
DATACITE_USERNAME=<replace with your DataCite username>
DATACITE_PASSWORD='<replace with your DataCite password>'
# use quotes around the password, otherwise this can create problems on a shell
DATACITE_API_URL=https://api.datacite.org
# Test mode: https://api.test.datacite.org
# Production mode: https://api.datacite.org

PUBLICATION_DOI_STATE=draft
# Choose one of 'draft', 'registered', 'findable'
# Please keep in mind that only 'draft' DOIs are deletable.
# For production, use 'findable', if the DOIs should be public.

PUBLICATION_URL_PREFIX=https://contact.engineering/go/
# PUBLICATION_DOI_PREFIX=<replace with your DOI prefix registered at DATACITE>
PUBLICATION_DOI_MANDATORY=False

# Storage settings
# ------------------------------------------------------------------------------
USE_S3_STORAGE=yes

AWS_ACCESS_KEY_ID=<insert your access key id>
AWS_SECRET_ACCESS_KEY=<insert your secret acccess key>

# the bucket will be created if not available, you can use different buckets for development and production:
AWS_STORAGE_BUCKET_NAME=topobank-production
# replace with your endpoint url, you can use http://localhost:8082/ if you want to use an SSH tunnel to your endpoint:
AWS_S3_ENDPOINT_URL=<insert your endpoint url>
AWS_S3_USE_SSL=True # this is default
AWS_S3_VERIFY=False  # currently the certificate is not valid

# Backup Settings
# ------------------------------------------------------------------------------
#
# Periodically database dumps will be written to the defined S3 bucket
# with prefix "backup".
#
# For more information about the used docker image: https://hub.docker.com/r/codestation/go-s3-backup/
#
# set 6 (!) cron job-like fields: secs minutes hours day_of_month month day_of_week
# or predefined schedules
# or "none" for single backup once
# for more information see: https://godoc.org/github.com/robfig/cron
DBBACKUP_SCHEDULE=@daily
#DBBACKUP_SCHEDULE=none
