version: '3.2'

volumes:
  production_postgres_data: {}
  production_postgres_data_backups: {}
  production_caddy: {}
  production_media: {}

networks:
  topobank_net:
    driver: overlay
    # external: true
    #driver_opts:
    #  encrypted: ""

services:
  django: &django
    build:
      context: .
      dockerfile: ./compose/production/django/Dockerfile
    shm_size: '2gb'
    image: contact.engineering:5000/topobank_production_django
    depends_on:
      - postgres
      - redis
    volumes:
      - production_media:/app/media
    env_file:
      - ./.envs/.production/.django
      - ./.envs/.production/.postgres
    command: /start
    deploy:
      endpoint_mode: dnsrr
      placement:
        constraints:
          - node.role==manager
    networks:
      - topobank_net

  postgres:
    build:
      context: .
      dockerfile: ./compose/production/postgres/Dockerfile
    image: contact.engineering:5000/topobank_production_postgres
    volumes:
      - production_postgres_data:/var/lib/postgresql/data
      - production_postgres_data_backups:/backups
    env_file:
      - ./.envs/.production/.postgres
    entrypoint: /docker-entrypoint.sh -c "shared_buffers=2GB" -c "max_connections=2000"
    deploy:
      endpoint_mode: dnsrr
      placement:
        constraints:
          - node.role==manager
    sysctls:
      # NOTES: these values are needed here because docker swarm kills long running idle
      # connections by default after 15 minutes see https://github.com/moby/moby/issues/31208
      # info about these values are here https://tldp.org/HOWTO/TCP-Keepalive-HOWTO/usingkeepalive.html
      - net.ipv4.tcp_keepalive_intvl=600
      - net.ipv4.tcp_keepalive_probes=9
      - net.ipv4.tcp_keepalive_time=600
    networks:
      - topobank_net

  dbbackup:
    build:
      context: .
      dockerfile: ./compose/production/dbbackup/Dockerfile
    image: contact.engineering:5000/topobank_production_dbbackup
    depends_on:
      - postgres
    env_file:
      - ./.envs/.production/.django
      - ./.envs/.production/.postgres
    entrypoint: /entrypoint
    deploy:
      placement:
        constraints:
          - node.role==manager
    networks:
      - topobank_net

  caddy:
    build:
      context: .
      dockerfile: ./compose/production/caddy/Dockerfile
    image: contact.engineering:5000/topobank_production_caddy
    depends_on:
      - django
    volumes:
      - production_caddy:/root/.caddy
    env_file:
      - ./.envs/.production/.caddy
    ports:
      - "0.0.0.0:80:80"
      - "0.0.0.0:443:443"
    deploy:
      placement:
        constraints:
          - node.role==manager
    networks:
      - topobank_net

  #
  # redis should run only once on manager
  #
  redis:
    image: redis:6-alpine
    restart: always
    deploy:
      # endpoint_mode: dnsrr
      placement:
        constraints:
          - node.role==manager
    networks:
      - topobank_net
    command: redis-server /etc/redis/redis.conf
    volumes:
      - ./compose/production/redis/redis.conf:/etc/redis/redis.conf
    #sysctls:
    #  # NOTES: these values are needed here because docker swarm kills long running idle
    #  # connections by default after 15 minutes see https://github.com/moby/moby/issues/31208
    #  # info about these values are here https://tldp.org/HOWTO/TCP-Keepalive-HOWTO/usingkeepalive.html
    #  - net.ipv4.tcp_keepalive_intvl=30
    #  - net.ipv4.tcp_keepalive_probes=10
    #  - net.ipv4.tcp_keepalive_time=600

  celeryworker:
    <<: *django
    image: contact.engineering:5000/topobank_production_celeryworker
    command: /start-celeryworker
    volumes:
      - /tmp/container-data/tmp:/tmp
    deploy:
      placement:
        constraints:
          - node.role==worker

  celerybeat:
    <<: *django
    image: contact.engineering:5000/topobank_production_celerybeat
    command: /start-celerybeat
    deploy:
      placement:
        constraints:
          - node.role==worker

#
# Flower currently not working due to version conflict with setuptools
#
#  flower:
#    <<: *django
#    image: contact.engineering:5000/topobank_production_flower
#    command: /start-flower
#    deploy:
#      placement:
#        constraints:
#          - node.role==manager
