name: Test code functionality

on:
  push:
    branches:
      - '**'
    tags:
      - '**'
  pull_request:
    branches:
      - '**'

jobs:
  tests:
    runs-on: ubuntu-22.04
    timeout-minutes: 15

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: secret
          POSTGRES_DB: topobank-test
        ports:
          - 5432:5432

      minio:
        image: minio/minio
        ports:
          - 9000:9000
        env:
          MINIO_ROOT_USER: admin
          MINIO_ROOT_PASSWORD: secret12
        volumes:
          - ${{ github.workspace }}/data:/data
        options: --name=minio --health-cmd "curl http://localhost:9000/minio/health/live"

      minio-create-buckets:
        image: minio/mc
        depends_on:
          minio:
            condition: service_healthy
        env:
          BUCKET_NAME: topobank-dev
          ENDPOINT: http://minio:9000
        entrypoint: >
            /bin/sh -c "
            /usr/bin/mc config host add minio http://minio:9000 admin secret12;
            /usr/bin/mc mb --ignore-existing minio/topobank-dev;
            /usr/bin/mc anonymous set public minio/topobank-dev;
            exit 0;
            "

    env:
      USE_DOCKER: no
      DJANGO_SETTINGS_MODULE: config.settings.test
      DATABASE_URL: postgres://postgres:secret@localhost/topobank-test

    strategy:
      matrix:
        python-version: ['3.10']

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
        submodules: recursive

    - name: Set up python3 ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install
      run: |
        pip install --upgrade pip pip-tools
        pip-compile --extra dev pyproject.toml
        pip install -r requirements.txt
        USE_DOCKER=no python manage.py collectstatic

    - name: Test
      run: pytest -v --ignore=splinter_tests
