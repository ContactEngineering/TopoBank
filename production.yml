version: '3'

volumes:
  production_postgres_data: {}
  production_postgres_data_backups: {}
  production_caddy: {}
  production_media: {}
  # The media is used to save the topography files, will probably be replaced later by S3

services:
  django: &django
    build:
      context: .
      dockerfile: ./compose/production/django/Dockerfile
    shm_size: '2gb'
    image: topobank_production_django
    depends_on:
      - postgres
      - rabbitmq
      - memcached
    volumes:
      - production_media:/app/media
    env_file:
      - ./.envs/.production/.django
      - ./.envs/.production/.postgres
    command: /start

  postgres:
    build:
      context: .
      dockerfile: ./compose/production/postgres/Dockerfile
    image: topobank_production_postgres
    volumes:
      - production_postgres_data:/var/lib/postgresql/data
      - production_postgres_data_backups:/backups
    env_file:
      - ./.envs/.production/.postgres
    entrypoint: /docker-entrypoint.sh -c "shared_buffers=2GB" -c "max_connections=2000"

#  pgbackups3:
#    image: schickling/postgres-backup-s3
#    links:
#      - postgres
#    environment:
#      SCHEDULE: '@daily'
#      S3_REGION: region
#      S3_ACCESS_KEY_ID: key
#      S3_SECRET_ACCESS_KEY: secret
#      S3_BUCKET: my-bucket
#      S3_PREFIX: backup
#      POSTGRES_DATABASE: dbname
#      POSTGRES_USER: user
#      POSTGRES_PASSWORD: password
#      POSTGRES_EXTRA_OPTS: '--schema=public --blobs'
#
#  dbbackup:
#    build:
#      context: .
#      dockerfile: ./compose/production/dbbackup/Dockerfile
#    image: topobank_production_dbbackup
#    depends_on:
#      - postgres
#    env_file:
#      - ./.envs/.production/.django
#      - ./.envs/.production/.postgres
#    entrypoint: /entrypoint

  caddy:
    build:
      context: .
      dockerfile: ./compose/production/caddy/Dockerfile
    image: topobank_production_caddy
    depends_on:
      - django
    volumes:
      - production_caddy:/root/.caddy
    env_file:
      - ./.envs/.production/.caddy
    ports:
      - "0.0.0.0:80:80"
      - "0.0.0.0:443:443"

  memcached:
    image: memcached:1.5-alpine
    volumes:
      - production_media:/app/media

  rabbitmq:
    image: rabbitmq:3.7-alpine

  celeryworker:
    <<: *django
    image: topobank_production_celeryworker
    command: /start-celeryworker

  celerybeat:
    <<: *django
    image: topobank_production_celerybeat
    command: /start-celerybeat

  flower:
    <<: *django
    image: topobank_production_flower
    command: /start-flower
